HPDinterval(as.mcmc(t_t_d_Ib))
mean(na.omit(t_t_s_De))
HPDinterval(as.mcmc(t_t_s_De))
mean(na.omit(t_t_s_Ja))
HPDinterval(as.mcmc(t_t_s_Ja))
mean(na.omit(t_t_d_Ja))
HPDinterval(as.mcmc(t_t_d_Ja))
mean(na.omit(t_t_d_De))
HPDinterval(as.mcmc(t_t_d_De))
table(t_t_d_De)
t_t_d_De
is.na(t_t_d_De)
table(is.na(t_t_d_De))
table(is.na(t_t_d_Ja))
table(is.na(t_t_d_Ib))
500/11*100
100/500*11
(100/500)*11
100/500
(11/500)*100
(11/500)
500/500
277/500
(11/500)
100-(11/500)
100-(277/500)
1-(11/500)
1-(277/500)
277/500
1-(11/500)
11/500
223/500
489/500
223/500
277/500
1-(277/500)
dens_t_t_d_Ib
dens_t_t_d_Ib$x
dens_t_t_d_Ib$y
plot(dens_t_t_s_De, main = "Time to surpass", col = "lightblue4", ylab = "", xlab = "Years", axes = FALSE, xlim = c(0,800))
polygon(dens_t_t_s_De_df$x, dens_t_t_s_De_df$y, col = adjustcolor("lightblue", alpha.f = 0.4), border = NA)
polygon(c(dens_t_t_s_De_df_HPDI$x,rev(dens_t_t_s_De_df_HPDI$x)),
c(rep(0.00001,length(dens_t_t_s_De_df_HPDI$x)),rev(dens_t_t_s_De_df_HPDI$y)),
col = adjustcolor("lightblue4", alpha.f = 1), border = NA)
abline(v = median(t_t_s_De), lty = 2, col = "white")
axis(1)
mtext("Denmark",2, cex = 1.2, font = 2, line = 1)
plot(dens_t_t_d_De, main = "Time to hg disappearance", col = "lightblue4", ylab = "", xlab = "Years", axes = FALSE, xlim = c(0,800))
polygon(dens_t_t_d_De_df$x, dens_t_t_d_De_df$y, col = adjustcolor("lightblue", alpha.f = 0.4), border = NA)
polygon(c(dens_t_t_d_De_df_HPDI$x,rev(dens_t_t_d_De_df_HPDI$x)),
c(rep(0.00001,length(dens_t_t_d_De_df_HPDI$x)),rev(dens_t_t_d_De_df_HPDI$y)),
col = adjustcolor("lightblue4", alpha.f = 1), border = NA)
abline(v = median(na.omit(t_t_d_De)), lty = 2, col = "white")
axis(1)
max(t_t_d_De_HPDI_high)
## Plots
png("./Figures/Fig_6.png", width = 1200, height = 850)
par(mfrow = c(3,2))
## Time to surpass
plot(dens_t_t_s_De, main = "Time to surpass", col = "lightblue4", ylab = "", xlab = "Years", axes = FALSE, xlim = c(0,800))
polygon(dens_t_t_s_De_df$x, dens_t_t_s_De_df$y, col = adjustcolor("lightblue", alpha.f = 0.4), border = NA)
polygon(c(dens_t_t_s_De_df_HPDI$x,rev(dens_t_t_s_De_df_HPDI$x)),
c(rep(0.00001,length(dens_t_t_s_De_df_HPDI$x)),rev(dens_t_t_s_De_df_HPDI$y)),
col = adjustcolor("lightblue4", alpha.f = 1), border = NA)
abline(v = median(t_t_s_De), lty = 2, col = "white")
axis(1)
mtext("Denmark",2, cex = 1.2, font = 2, line = 1)
plot(dens_t_t_d_De, main = "Time to hg disappearance", col = "lightblue4", ylab = "", xlab = "Years", axes = FALSE, xlim = c(0,800))
polygon(dens_t_t_d_De_df$x, dens_t_t_d_De_df$y, col = adjustcolor("lightblue", alpha.f = 0.4), border = NA)
polygon(c(dens_t_t_d_De_df_HPDI$x,rev(dens_t_t_d_De_df_HPDI$x)),
c(rep(0.00001,length(dens_t_t_d_De_df_HPDI$x)),rev(dens_t_t_d_De_df_HPDI$y)),
col = adjustcolor("lightblue4", alpha.f = 1), border = NA)
abline(v = median(na.omit(t_t_d_De)), lty = 2, col = "white")
axis(1)
plot(dens_t_t_s_Ja, col = "lightblue4", ylab = "", xlab = "Years", main = "", axes = FALSE, xlim = c(0,800))
polygon(dens_t_t_s_Ja_df$x, dens_t_t_s_Ja_df$y, col = adjustcolor("lightblue", alpha.f = 0.4), border = NA)
polygon(c(dens_t_t_s_Ja_df_HPDI$x,rev(dens_t_t_s_Ja_df_HPDI$x)),
c(rep(0.00001,length(dens_t_t_s_Ja_df_HPDI$x)),rev(dens_t_t_s_Ja_df_HPDI$y)),
col = adjustcolor("lightblue4", alpha.f = 1), border = NA)
abline(v = median(t_t_s_Ja), lty = 2, col = "white")
axis(1)
mtext("Japan",2, cex = 1.2, font = 2, line = 1)
plot(dens_t_t_d_Ja, col = "lightblue4", ylab = "", xlab = "Years", main = "", axes = FALSE, xlim = c(0,800))
polygon(dens_t_t_d_Ja_df$x, dens_t_t_d_Ja_df$y, col = adjustcolor("lightblue", alpha.f = 0.4), border = NA)
polygon(c(dens_t_t_d_Ja_df_HPDI$x,rev(dens_t_t_d_Ja_df_HPDI$x)),
c(rep(0.00001,length(dens_t_t_d_Ja_df_HPDI$x)),rev(dens_t_t_d_Ja_df_HPDI$y)),
col = adjustcolor("lightblue4", alpha.f = 1), border = NA)
abline(v = median(t_t_d_Ja), lty = 2, col = "white")
axis(1)
plot(dens_t_t_s_Ib, main = "", col = "lightblue4", ylab = "", xlab = "Years", axes = FALSE, xlim = c(0,800))
polygon(dens_t_t_s_Ib_df$x, dens_t_t_s_Ib_df$y, col = adjustcolor("lightblue", alpha.f = 0.4), border = NA)
polygon(c(dens_t_t_s_Ib_df_HPDI$x,rev(dens_t_t_s_Ib_df_HPDI$x)),
c(rep(0.00001,length(dens_t_t_s_Ib_df_HPDI$x)),rev(dens_t_t_s_Ib_df_HPDI$y)),
col = adjustcolor("lightblue4", alpha.f = 1), border = NA)
abline(v = median(t_t_s_Ib), lty = 2, col = "white")
axis(1)
mtext("Iberia",2, cex = 1.2, font = 2, line = 1)
plot(dens_t_t_d_Ib, main = "", col = "lightblue4", ylab = "", xlab = "Years", axes = FALSE, xlim = c(0,800))
polygon(dens_t_t_d_Ib_df$x, dens_t_t_d_Ib_df$y, col = adjustcolor("lightblue", alpha.f = 0.4), border = NA)
polygon(c(dens_t_t_d_Ib_df_HPDI$x,rev(dens_t_t_d_Ib_df_HPDI$x)),
c(rep(0.00001,length(dens_t_t_d_Ib_df_HPDI$x)),rev(dens_t_t_d_Ib_df_HPDI$y)),
col = adjustcolor("lightblue4", alpha.f = 1), border = NA)
abline(v = median(na.omit(t_t_d_Ib)), lty = 2, col = "white")
axis(1)
dev.off()
colors <- colorspace::sequential_hcl(time, h = c(0,400), l = c(50,70)) ## Colour palettes
length(colors)
seq(1,time,length.out=8)
leg_vals
dat
dat[,3]
dat
par(mfrow = c(3,3), mar = c(5,4,4,8), xpd = TRUE)
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
colors[1500] <- "white"
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
colors[1500] <- "black"
par(mfrow = c(3,3), mar = c(5,4,4,8), xpd = TRUE)
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
colors[1500] <- "red"
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
colors[1500] <- "darkred"
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
?sequential_hcl
colors <- colorspace::sequential_hcl(time, h = c(0,400), l = c(50,70), rev = TRUE) ## Colour palettes
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
colors <- colorspace::sequential_hcl(time, h = c(0,400), l = c(50,70), power = 1) ## Colour palettes
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
colors <- colorspace::sequential_hcl(time, h = c(0,400), l = c(50,70), power = 2) ## Colour palettes
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
colors <- colorspace::sequential_hcl(time, h = c(0,400), l = c(50,70), power = 3) ## Colour palettes
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
colors <- colorspace::sequential_hcl(time, h = c(0,400), l = c(50,70), power = -1) ## Colour palettes
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
colors <- colorspace::sequential_hcl(time, h = c(0,400), l = c(50,70), power = -0.5) ## Colour palettes
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
colors <- colorspace::sequential_hcl(time, h = c(0,400), l = c(50,70), power = 0.5) ## Colour palettes
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
colors <- colorspace::sequential_hcl(time, h = c(0,400), l = c(50,70)) ## Colour palettes
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
colors[1500] <- "white"
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
png("./Figures/Fig_2.png", width = 1200, height = 850)
colors <- colorspace::sequential_hcl(time, h = c(0,400), l = c(50,70)) ## Colour palettes
colors[1500] <- "white"
par(mfrow = c(3,3), mar = c(5,4,4,8), xpd = TRUE)
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
dev.off()
seq(1,time,length.out=8)
colors
colors[1501] <- "white"
png("./Figures/Fig_2.png", width = 1200, height = 850)
colors <- colorspace::sequential_hcl(time, h = c(0,400), l = c(50,70)) ## Colour palettes
colors[1501] <- "white"
par(mfrow = c(3,3), mar = c(5,4,4,8), xpd = TRUE)
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
dev.off()
tail(colors)
nrow(dat)
length(dat[,1])
length(colors)
time
colors <- colorspace::sequential_hcl(time+1, h = c(0,400), l = c(50,70)) ## Colour palettes
colors[1501] <- "white"
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
################################################################################
#####################               FIG. 2              ########################
################################################################################
## Import libraries
library(paletteer)
## Prepare utilities
time <- 1500
colors <- colorspace::sequential_hcl(time, h = c(0,400), l = c(50,70)) ## Colour palettes
nameGn <- expression(paste(gamma["'f"])) ## expressions for the axes
nameGm <- expression(paste(gamma["hg"])) ## expressions for the axes
nameDn <- expression(paste(delta["f"])) ## expressions for the axes
nameDm <- expression(paste(delta["hg"])) ## expressions for the axes
## Indexes for looping (loading and printing)
ratio <- c(rep(0.1,3),rep(0.2,3),rep(0.4,3))
e <- rep(c(0,0.1,0.2),3)
## Values for the legend
leg_vals <- c("0-200 y","200-400 y","400-600 y","600-800 y",
"800-1000 y","1000-1200 y","1200-1400 y","Not occurred")
## Time to peak
png("./Figures/Fig_2.png", width = 1200, height = 850)
par(mfrow = c(3,3), mar = c(5,4,4,8), xpd = TRUE)
for (i in 1:9){
## Load data
dat <- readRDS(paste0("./Results/Sensitivity/Death_r_",ratio[i],"_e_",e[i],".rds"))
dat <- dat[,c(1,3,11)] ## 9 for Time to surpass, 10 for Time to Extinction and 11 for time to peak f
plot(dat[,2],dat[,1],col=colors[dat[,3]], pch = 15, cex = 2.5, bty = "n", xlab = nameDn, ylab = "",
cex.lab = 1.5)
title(ylab = nameDm, line = 2, cex.lab = 1.5)
grid(lty = 2, lwd = 0.3, col = "white")
contour(dat[,2][1:100],dat[,1][seq(1,length(dat[,1]),100)],matrix(c(dat[,3]),nrow = 100, ncol = 100),
col = "black", add = TRUE)
if (i ==3){
legend(x = 0.036, y = 0.038, legend = rep("",8), pch = rep(15,8),
col = colors[seq(1,time,length.out=8)], bty = "n",  cex = 7, y.intersp = 0.15)
legend(x = 0.0435, y = 0.0335, legend = leg_vals, bty = "n",  cex = 1, y.intersp = 1.25)
legend(x = 0.039, y = 0.05, legend = c("Time to","peak"), cex = 1.2, bty = "n", y.intersp = 1,
text.font = 2)
}
title(paste0("assimilation", " = ", e[i], " / ratio = ", ratio[i]))
}
dev.off()
